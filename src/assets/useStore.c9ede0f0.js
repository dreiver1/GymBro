var c=Object.defineProperty;var p=(t,s,e)=>s in t?c(t,s,{enumerable:!0,configurable:!0,writable:!0,value:e}):t[s]=e;var o=(t,s,e)=>(p(t,typeof s!="symbol"?s+"":s,e),e);import{k as a,W as l}from"./index.22855cfa.js";import{a as r}from"./axios.fc62587e.js";class u{constructor(s){o(this,"route");this.route=s}async get(){return(await r.get(this.route)).data}async getByID(s){return(await r.get(`${this.route+"/"+s}`)).data}async getByName(s){return(await r.get(`${this.route+"/name/"+s}`)).data}async post(s){return await r.post(this.route,s)}async put(s,e){return(await r.put(`${this.route+"/"+s}`,e)).data}async delete(s){return(await r.delete(`${this.route+"/"+s}`)).data}}const d=new u("user"),n=new u("role"),i=a({userId:"",email:"",password:"",cpf:"",date:"",name:"",userName:"",roleName:"",roleId:""}),h=a([]),f=l("user",{state:()=>({roles:a([]),users:h,userApi:d,roleApi:n,user:i,api:r}),actions:{async login(){return(await this.api.post("/login",{email:this.user.email,password:this.user.password})).data},put(){this.userApi.put(`${this.user.userId}`,i.value)},async post(){return(await this.userApi.post(this.user)).data},async getRoles(){this.roles.values=await n.get(),console.log(this.roles.values)}}});export{f as u};
